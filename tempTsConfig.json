{
    "compilerOptions": {
        "target": "ES2015", // 指定ECMAScript目标版本 "ES3"（默认）， "ES5"， "ES6"/ "ES2015"， "ES2016"， "ES2017"或 "ESNext"。
        "module": "ESNext", // 指定生成哪个模块系统代码：
        "allowJs": true, // 允许编译javascript文件。
        "checkJs": true, // 在 .js文件中报告错误。与 --allowJs配合使用。
        "jsx": "react", // 在 .tsx文件里支持JSX： "React"或 "Preserve"
        "sourceMap": true, // 生成相应的 .map文件。
        "outDir": "./dist/assets/", // 重定向输出目录。
        "removeComments": false, // 删除所有注释，除了以 /!*开头的版权信息。
        "importHelpers": true, // 从 tslib 导入辅助工具函数（比如 __extends， __rest等）
        "strict": true, // 严格模式
        "noImplicitAny": false, // 在表达式和声明上有隐含的 any类型时报错。
        "strictNullChecks": true, // 在严格的 null检查模式下， null和 undefined值不包含在任何类型里，只允许用它们自己和 any来赋值（有个例外， undefined可以赋值到 void）。
        "strictFunctionTypes": true, // 禁用函数参数双向协变检查。
        "alwaysStrict": true, // 以严格模式解析并为每个源文件生成 "use strict"语句
        "moduleResolution": "node", // 决定如何处理模块。或者是"Node"对于Node.js/io.js，或者是"Classic"（默认）。
        "baseUrl": "./", // 解析非相对模块名的基准目录。
        "paths": {// 模块名到基于 baseUrl的路径映射的列表。
            "*": [
                "*",
                "src/*",
                "tests/*"
            ],
            "@antd/*": [
                "./node_modules/antd/es/*"
            ],
            "@ria/*": [
                "./src/com/didichuxing/ria/*"
            ]
        },
        "rootDirs": [
            // 根（root）文件夹列表，表示运行时组合工程结构的内容。
            "./src"
        ],
        "allowSyntheticDefaultImports": true,
        // 允许从没有设置默认导出的模块中默认导入。
        "experimentalDecorators": true,
        // 启用实验性的ES装饰器。
        "emitDecoratorMetadata": true
        // 给源码里的装饰器声明加上设计类型元数据。
    },
    "include": [
        "./src/"
    ]
}
